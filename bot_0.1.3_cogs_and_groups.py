import os
import random
import discord
from importlib import reload
#from dotenv import load_dotenv
from discord.ext import commands
import _repeat_class as rc #—Ç–∞–∫ –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å reload(rc)!
#from _repeat_class import Repeat, fetch_active_card
from _users_admission import is_user_allowed
#from !cards import cards_imports_reload (! –º–µ—à–∞–µ—Ç –∏–º–ø–æ—Ä—Ç—É) 

#load_dotenv()
#TOKEN = os.getenv('VOCABOT_TOKEN') #unique bot token (must be secured)
with open('DANGER_NSFGITHUB.txt', 'r') as F:
    TOKEN = F.read()

#!native –Ω–µ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
#get_dirs_from_cloud - –æ—à–∏–±–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–æ–≤
#–ù–ê–°–¢–†–ê–ò–í–ê–ï–ú –ë–ê–ó–´ –î–ê–ù–ù–´–• –ù–ê –•–ï–†–û–ö–£ (–ß–¢–û–ë–´ –°–õ–û–í–ê–†–ò –ù–ï –£–î–ê–õ–Ø–õ–ò–°–¨ –ü–†–ò –ü–ï–†–ï–ó–ê–ü–£–°–ö–ï)
#service command: "delete bot messages"
#help message only in DM
#RENEGATTO COMPRENDO CHITAT' REVIEW
#–ø—Ä–æ—á–∏—Ç–∞—Ç—å "twelve-factor app"
#–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–æ–º–º–∞–Ω–¥ (–∏ –∏–≤–µ–Ω—Ç–æ–≤ - listenerov?) (extentions & cogs)
#events —Ç–æ–∂–µ —Ä–∞—Å–∫–∏–¥–∞—Ç—å –ø–æ —Ñ–∞–π–ª–∞–º (–ª–æ–≥–∏—á–Ω–æ, –µ—Å–ª–∏ —Ä–µ–∞–∫—Ü–∏–∏ –¥–ª—è bookish –±—É–¥—É—Ç –≤ bookish)
#lambdas and decos
#user assigning via id
#message logging via "nonce"


#–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å "nonce" –≤–º–µ—Å—Ç–æ "message/user.ID" –ø—Ä–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤ —Ñ–∞–π–ª—ã 
#–ø—Ä–æ—Å–ª–µ–¥–∏—Ç—å, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç R –ø–æ—Å–ª–µ —Ä–∞–∑–±–∏–µ–Ω–∏—è –Ω–∞ @commands
#–Ω–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ, –µ—Å–ª–∏ –≤ —Ä–∞–∑–Ω—ã—Ö –∫–æ–º–º–∞–Ω–¥–∞—Ö –æ–¥–∏–Ω–∞–∫–æ–≤–æ –Ω–∞–∑—ã–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ F –∏ file? 
#–í–´–¢–ê–©–ò–¢–¨ –û–®–ò–ë–ö–ò –†–ê–°–®–ò–†–ï–ù–ò–ô
#–∏–∑ —Ö–µ–ª–ø—ã —É–±—Ä–∞—Ç—å "staff only" –∫–æ–º–∞–Ω–¥—ã
#done with 0.1.3 --- next ver: bot 0.1.4 (sql database). Then 0.2.4 (pics sending)

#—Å–≤–æ–∏ —ç–∫—Å–µ–ø—à–µ–Ω—ã 
#–†–µ—Ñ–ê–∫–¢–æ–†–∏—Ç–¨ (–Ω–∞—á–∏–Ω–∞—è —Å –±–∏–ª—Ç-–∏–Ω –º–µ—Ç–æ–¥–æ–≤ –∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞—è –Ω–æ–≤—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏, —Ç–∏–ø–∞–º–∏, [—Å—É–±]–∫–ª–∞—Å—Å–∞–º–∏)
#–ø—Ä–æ–¥—É–º–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –±—ç–∫–∞–ø–æ–≤ –ª–æ–≥–æ–≤_—Å–æ–æ–±—â–µ–Ω–∏–π, —Å–ª–æ–≤–∞—Ä–µ–π –∏ langs (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å + —Ä—É—á–Ω–æ–π —É—Ä–æ–≤–µ–Ω—å)
#–æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –∏ –∫–∞—Ä—Ç–∏–Ω–∫—É (—á–∏–∞—Ç–π FAQ –ø–æ—á–∞—â–µ)
'''—Å–¥–µ–ª–∞—Ç—å –∑–∞—â–∏—Ç—É –æ—Ç —Å–ø–∞–º–∞ (–º–∞–∫—Å–∏–º—É–º - 120 –¥–µ–π—Å—Ç–≤–∏–π –∑–∞ –º–∏–Ω—É—Ç—É, —Ç. –µ. 6 —á–µ–ª - –¥–µ–π—Å—Ç–≤–∏–µ 3 —Å–µ–∫—É–Ω–¥—ã, 
24 —á–µ–ª - –¥–µ–π—Å—Ç–≤–∏–µ –≤ 12 —Å–µ–∫(!). –î–ª—è –Ω–∞—á–∞–ª–∞ —Å–ª–æ—É–º–æ–¥ = 1 —Å–µ–∫ –ø–æ–π–¥–µ—Ç. –ù—É–∂–µ–Ω –µ—â–µ –∏ —è–≤–Ω—ã–π —Å—á–µ—Ç—á–∏–∫ –∏–≤–µ–Ω—Ç–æ–≤ –Ω–∞ —Å–ª—É—á–∞–π, 
–µ—Å–ª–∏ –æ–Ω–∏ –≤–º–µ—Å—Ç–µ —Ä–µ—à–∞—Ç –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å—Ç—Ä–µ—Å—Å-—Ç–µ—Å—Ç –∏ (–±—É–¥—É—Ç –∫–ª–∏–∫–∞—Ç—å –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É) '''


GUILD = 673968890325237771 #server name (–ü–ö)

bot_prefix = '!v ' #–ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–ª–∏ –ø—Ä–µ—Ñ–∏–∫—Å
bot = commands.Bot(command_prefix = bot_prefix)

@bot.event
async def on_ready(): #executes when connection made and data prepaired
    for guild in bot.guilds:
        if guild.id == GUILD:
            break
    print(f'{bot.user} is connected to  {guild.name} (id: {guild.id})')
    for member in guild.members: #finding my "member"
        if member.name == "Machine ü™ê":
            my_member = member
    if is_user_allowed(my_member.name): #am I even allowed lol (just in case)
        await my_member.create_dm()
        await my_member.dm_channel.send("```—Ç—ã –Ω—É–∂–µ–Ω –ª—é–¥—è–º```")
        print('start_dm_sent')
    else:
        print('that user is not allowed. Start dm was not send')
    —Å–º–æ—Ç—Ä–∏—Ç = discord.ActivityType.watching #cyrillics test
    await bot.change_presence(activity = discord.Activity(type = —Å–º–æ—Ç—Ä–∏—Ç, name = '!v help'))

@bot.event  #—Å—Ç–µ–Ω–æ–≥—Ä–∞–º–º–∞
async def on_message(message): #saving of all dialogues
    log_message(message)
    await bot.process_commands(message) #—ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É –¥—Ä—É–≥–∏—Ö –∫–æ–º–º–∞–Ω–¥ (—Å–º–æ—Ç—Ä–∏ FAQ –ø–æ—á–∞—â–µ)

@bot.check #global permission check
def user_permission_check(ctx): #applying permitted users list
    name = ctx.author.name #–ø–æ—Ç–æ–º —Å–¥–µ–ª–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ [user snowflake id] –∏ –Ω–µ –ø–∞—Ä–∏—Ç—Å—è
    #–∏ –ø–æ–ª—É—á–∞—Ç—å –µ–≥–æ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è/–ø—Ä–æ—Ü–µ–¥—É—Ä—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    #print(f'author.name equals {name}') #–ø–æ—á–µ–º—É —ç—Ç–æ—Ç –ø—Ä–∏–Ω—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –º–Ω–æ–≥–æ —Ä–∞–∑ –ø–æ—Å–ª–µ !vhelp?
    return is_user_allowed(name) #–≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–ª–∞–≥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏

def is_me():#decorator for is_me check
    def is_me_check(ctx):
        return ctx.message.author.id == 303115719644807168 #my_id
    return commands.check(is_me_check)

@bot.event  #–ø—Ä–∏ –æ—Ç–ª–∞–¥–∫–µ –æ—Ç–∫–ª—é—á–∞–µ–º —ç—Ç–æ, —á—Ç–æ–±—ã –≤—Å–µ –æ—à–∏–±–∫–∏ —à–ª–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –∞ –Ω–µ —Ç–µ—Ä—è–ª–∏—Å—å 
async def on_command_error(ctx, error):
    pass # –µ—Å–ª–∏ —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞, –µ–∫—Å–µ–ø—à–æ–Ω—ã –Ω–µ –ø—Ä–∏–Ω—Ç—è—Ç—Å—è. –≤–æ –∫–∞–∫
    if isinstance(error, commands.errors.CheckFailure): #–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
        await ctx.send("```You don't have permission to use it```")
    if isinstance(error, commands.errors.CommandNotFound):  #–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É "–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞"
        cool_responses = ["Try something different", "you've entered wrong command",
                    "**English, mother#$^%*1!! Can you speak it?**","There is no that command",
                    "Wrong command", "This command haven't been added yet, unfortunately"]
        #await ctx.send(random.choice(cool_responses))
        await ctx.send(f'`{random.choice(cool_responses)}`')
    if isinstance(error, commands.UserInputError):
        await ctx.send('```UserInputError occured```')# base class for several next errors
    if isinstance(error, commands.MissingRequiredArgument):
        await ctx.send('```Not enough arguments for that command```')
    if isinstance(error, commands.TooManyArguments):
        await ctx.send("```You've entered too many arguments```")
    if isinstance(error, commands.BadArgument):
        await ctx.send('```Wrong argument```')
    if isinstance(error, commands.BadUnionArgument):
        await ctx.send('```Wrong union argument```')
    if isinstance(error, commands.ArgumentParsingError):
        await ctx.send('```ArgumentParsingError occured```')
    if isinstance(error, commands.ExtensionFailed): #NE ROBIT —Å–º. "update" command
        await ctx.send('```ExtensionFailed ```')

@bot.event #–¥–µ–ª–∞–µ–º —ç–º–±–µ–¥
async def on_reaction_add(reaction, user): #leads to card flip on 'translation' side 
    msg_id = reaction.message.id
    if user == bot.user: return
    R = rc.fetch_active_card(msg_id)
    if R == None: return #–∑–Ω–∞—á–∏—Ç –æ–Ω –ø—É—Å—Ç–æ–π –∏ –∫–∞—Ä—Ç–æ—á–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
    await reaction.message.edit(embed = R.dm_embed_card('translation'))

@bot.event 
async def on_reaction_remove(reaction, user): #flips card_message on 'word' side again
    msg_id = reaction.message.id
    if user == bot.user: return
    R = rc.fetch_active_card(msg_id)
    if R == None: return #–∑–Ω–∞—á–∏—Ç –æ–Ω –ø—É—Å—Ç–æ–π –∏ –∫–∞—Ä—Ç–æ—á–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
    await reaction.message.edit(embed = R.dm_embed_card('word'))


#------------------–≥—Ä—É–ø–ø–∞ –∏–≤–µ–Ω—Ç–æ–≤ –¥–ª—è –∫–Ω–∏–∂–Ω–æ–≥–æ---------------------
 
def is_bookish_message(message): #func for sprcific guild check. id is for –ü–ö server
    if isinstance(message.channel, discord.TextChannel): 
        return message.guild.id == 673968890325237771
    else:
        return False

def is_bookish_member(member): return member.guild.id == 673968890325237771

@bot.event
async def on_member_join(member):
    if is_bookish_member(member):
        log_channel = get_log_channel(member.guild)#–∏–ª–∏ (member.guild, 'general_logs')
        print(log_channel)
        await log_channel.send('on_member_join worked')

@bot.event
async def on_member_remove(member):
    if is_bookish_member(member):
        log_channel = get_log_channel(member.guild)
        print(log_channel)
        await log_channel.send('on_member_remove worked')

@bot.event
async def on_message_edit(before, after):
    if is_bookish_message(before) and before.author != bot.user:
    #–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –µ–º–±–µ–¥–∞ == edit. —Ç–∞–∫ —á—Ç–æ –Ω—É–∂–Ω–∞ —Ç–∞–±–ª–µ—Ç–∫–∞ –æ—Ç —Å–∞–º–æ–æ—Ç–≤–µ—Ç–æ–≤
        log_channel = get_log_channel(before.guild)
        embed = discord.Embed(title = '__**message edited**__', type = 'rich', 
                        description = f'`author:` {before.author}\n`msg`: {before.content}\n`edited:` {after.content}', 
                        colour = discord.Colour.dark_teal())
        await log_channel.send(embed = embed)

@bot.event
async def on_message_delete(message):
    if is_bookish_message(message) and message.author != bot.user:
    #—Ç—É—Ç —Ç–∞–±–ª–µ—Ç–∫–∞ —Ä–∞–¥–∏ —É–¥–æ–±—Å—Ç–≤–∞. –ê —Ç–æ —Å–±—â –æ—Ç –±–æ—Ç–∞ –±—ã–ª–∏ –Ω–µ—É–¥–∞–ª—è–µ–º—ã–º–∏
        log_channel = get_log_channel(message.guild)
        embed = discord.Embed(title = '__**message deleted**__', type = 'rich', 
                        description = f'`author:` {message.author}\n`msg`: {message.content}',
                        colour = discord.Colour.gold())
        await log_channel.send(embed = embed)

def str_to_status(argument):
    if (argument in ('dnd','do_not_disturb', 'otsosi')):
        status = discord.Status.dnd
    elif (argument in ('idle','sleep', '–Ω–µ –∞–∫—Ç–∏–≤–µ–Ω', '–∞—Ñ–∫')):
        status = discord.Status.idle
    else: status = discord.Status.online
    return status

#-----------------------------------COMMANDS-------------------------------

@bot.command(name = '_custom', help = 'staff only') #–º–æ–∂–Ω–æ —Å—é–¥–∞ –ø–∏—Ö–∞—Ç—å –ª—é–±—É—é –≤—Ä–µ–º–µ–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É
@is_me()
async def getdirs(ctx): #–ø–æ—Å–º–æ—Ç—Ä–∏–º —Ñ–∞–π–ª—ã –≤ –æ–±–ª–∞–∫–µ
    print('1')
    with open('pull_listdir.txt', 'wb') as F:
        for element in os.listdir():
            F.write((element + '\n').encode('utf-8'))
    print('2')
    file = discord.File('pull_listdir.txt')
    #await ctx.author.create_dm()
    print('3')
    await ctx.author.dm_channel.send('`Here is your dictionary file`', file = file)
    await ctx.author.dm_channel.send('`create_dm needed only once`')
    print('4')
'''dict_file = discord.File(
            f'_Dictionaries/of {cursedtea}.txt', filename = 'Tea card collection.txt')
    await ctx.author.create_dm()
    await ctx.author.dm_channel.send('`Here is your dictionary file`', file = dict_file)
    
    dict_file = discord.File(
            f'_Dictionaries/of {cursedtea}.txt', filename = 'Tea card collection.txt')
    await ctx.author.create_dm()
    await ctx.author.dm_channel.send('`Here is your dictionary file`', file = dict_file)'''

@bot.command(name = '_status', help = 'staff only') #status update
@is_me() #–≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —à—Ç–∞—Ç–Ω–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç CheckFailure
async def status_setup(ctx, status_input: str_to_status, *args):
    game = discord.Game(' '.join(args))
    await ctx.bot.change_presence(status = status_input, activity = game)

@bot.command(name = '_update', help = 'staff only')
@is_me()
async def update_commands(ctx): #for updating commands during runtime
    #try:
    ctx.bot.reload_extension('!bookish')
    #except: 
    ctx.bot.reload_extension('!pics')
    ctx.bot.reload_extension('!cards')
    reload(rc)
    #reload(Repeat) #–∫–∞–∫ –±—ã –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ä–∞–∑—É –≤—Å–µ..
    #reload(fetch_active_card)
    #reload(is_user_allowed) 
    #cards_import_reload() #–µ—â–µ –º–æ–∂–Ω–æ —Ç–∞–∫ –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ—Å–≤–µ–Ω–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã 
    await ctx.send('```Extensions have been updated```')

#--------------------------LIST OF FUNCTIONS---------------------------- 

def log_message(message): #–≤—ã–Ω–µ—Å–ª–∏ —Å—é–¥–∞ —Ñ—É–Ω–∫—Ü–∏—é –≤–µ–¥–µ–Ω–∏—è —Å—Ç–µ–Ω–æ–≥—Ä–∞–º–º—ã —Ü–µ–ª–∏–∫–æ–º
    time = message.created_at 
    author = message.author
    #print(f'--- message from {author} --- ')
    print(f'--- message from {author} --- in {message.channel}\n{message.content}\n')
    if type(message.channel) == discord.channel.DMChannel: 
        name = message.channel.recipient.name #–∏–º—è —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ DM-–∫–∞–Ω–∞–ª–∞
        with open(fR'_DMs_history\of {name}.txt', 'ab') as F:
            if author == bot.user:
                F.write(f'{bot.user.name} - {time}\n{message.content}\n\n'.encode('utf-8'))
            else: #–ø—Ä–æ–±–ª–µ–º—ã —Å –±–∏—Ç–æ–π –∫–∏—Ä–∏–ª–ª–∏—Ü–µ–π —Ä–∞–∑—Ä–µ—à–∏–ª–∏—Å—å –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç–∞—Ä–æ–≥–æ —Ñ–∞–π–ª–∞
                F.write(f'{author.name} - {time}\n{message.content}\n\n'.encode('utf-8'))
    if type(message.channel) == discord.channel.TextChannel:
        guild = message.guild
        dirs = os.listdir('_Server_msg_hisory')
        if (f'of {guild}' in dirs) == False:
            os.mkdir(Rf'_Server_msg_hisory\of {guild}')
        with open(fR'_Server_msg_hisory\of {guild}\{message.channel}.txt', 'ab') as F:
            if author == bot.user:
                F.write(f'{author.name} - {time}\n{message.content}\n\n'.encode('utf-8'))
            else:
                F.write(f'{author.name} - {time}\n{message.content}\n\n'.encode('utf-8'))
    #–µ—â–µ –µ—Å—Ç—å —Ç–∏–ø—ã –∫–∞–Ω–∞–ª–æ–≤ –∫—Ä–æ–º–µ DMChannel –∏ TextChannel?

def get_log_channel(guild: discord.guild, logs_type: str = 'general_logs') -> discord.TextChannel:
    if logs_type == 'general_logs':
        with open('log_channel_ids.txt', 'r') as F:
            channel_id = int(F.readline())
    #elif purpose == <purpose_name> ... id –≤–æ–∑–≤—Ä–∞—Ç–∏—Ç—å –ø–æ –∫–ª—é—á—É (—Å–µ—Ä–≤–µ—Ä id + logs_type) 
    #(–Ω–∞–ø—Ä: important_audit_logs, deletion_logs, welcome_bye_logs)
    return guild.get_channel(channel_id)

def create_folders():
    dirs = os.listdir()
    if ('_Dictionaries' in dirs) == False:
        os.mkdir('_Dictionaries')
    if ('_DMs_history' in dirs) == False:
        os.mkdir('_DMs_history')
    if ('_Server_msg_hisory' in dirs) == False:
        os.mkdir('_Server_msg_hisory')

def clear_cache(): #—É–¥–∞–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–æ–≤ (–ø–æ —Å—É—Ç–∏ - –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö)
    with open('active_cards.txt', 'w') as F:
        F.write('') 
    with open('pending_dict_deletion.txt', 'w') as F:
        F.write('')

#------------------------–í–û–¢ PARAMETERS AND START UP----------------------------

bot.load_extension('!cards') #–ø–æ–¥–∫–ª—é—á–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
bot.load_extension('!bookish')
bot.load_extension('!pics') 
create_folders() #—Å–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –¥–ª—è –ª–æ–≥–æ–≤, –µ—Å–ª–∏ –∏—Ö –Ω–µ –±—ã–ª–æ
clear_cache() #—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –∫–∞—Ä—Ç–æ—á–µ–∫ —á—Ç–æ–±—ã –Ω–µ –æ–±–º–∞–Ω—ã–≤–∞—Ç—å—Å—è 
#–Ω–∞ —Å—á–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –∫—ç—à–∞ –∏ —Å–ø–∏—Å–∫–∞ id.
#–ß–°–• –ø—Ä–∏ –≤—ã–∑–æ–≤–µ !clr_cards —ç—Ç—É —Ñ—É–Ω–∫. –Ω–µ –≤—ã–∑—ã–≤–∞–µ–º
#–∞ –∑–Ω–∞—á–∏—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–∑ –∫—ç—à–∞ –Ω–µ –ø—Ä–æ–ø–∞–¥–∞—é—Ç –¥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ 

bot.run(TOKEN)