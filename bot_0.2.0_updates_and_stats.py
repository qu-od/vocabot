import os
import random
import discord
from importlib import reload
from discord.ext import commands
import _repeat_class as rc #—Ç–∞–∫ –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å reload(rc)!
#from _repeat_class import Repeat, fetch_active_card
import _users_admission as ua
#from _users_admission import is_user_allowed, init_user
import _language_edits as le
import _database as db
import _readalong_class as rac
#from !cards import cards_imports_reload (! –º–µ—à–∞–µ—Ç –∏–º–ø–æ—Ä—Ç—É) 
#sql –∑–∞–ø—Ä–æ—Å—ã –Ω–∞–ø–∏—Å–∞–Ω—ã –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É (—Ç. –µ. –µ—Å—Ç—å –æ–ø–∞—Å–Ω–æ—Å—Ç—å sql-injection)

–≤–µ—Ä—Å–∏—è_–±–æ—Ç–∞ = 'b'  #'b' for VocaBot 't' for VocaTest 
if –≤–µ—Ä—Å–∏—è_–±–æ—Ç–∞ == 'b': TOKEN = os.getenv('VOCABOT_TOKEN') 
if –≤–µ—Ä—Å–∏—è_–±–æ—Ç–∞ == 't': TOKEN = os.getenv('VOCATEST_TOKEN')
discord_error_handling = True
#False - –≤—Å–µ —Ç—Ä–µ–π—Å–±–µ–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏, True - –Ω–µ –≤—Å–µ –æ—à–∏–±–∫–∏, –Ω–æ –±—É–¥—É—Ç –≤ –¥–∏—Å–∫–æ—Ä–¥–µ.
#–¥–µ–ø–ª–æ–∏—Ç—å —Å True, —Ñ–∏–≥–∞—á–∏—Ç—å —Å False. –¢. –∫. c True –±–æ—Ç –∏–Ω–æ–≥–¥–∞ –ø–∞–¥–∞–µ—Ç –º–æ–ª—á–∞. 

#BUG: –∫–∞—Ä—Ç–æ—á–∫–∏ –æ—Ç–≤–∞–ª–∏–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è (–∫–æ–≥–¥–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø—Ä–µ—Ä—ã–≤–∞–µ—Ç—Å—è)
#–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–∞ on_ready(). –í–∑—è–≤ —ç—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫—ç—à —Å–Ω–æ–≤–∞

#BUG: –≤—Ç–æ—Ä–æ–π —Ä–∞–∑ —Å–ª–æ–≤–∞—Ä—å –Ω–µ —É–¥–∞–ª—è–µ—Ç—Å—è (!cards_clr) 2 —Ä–∞–∑–∞ –ø–æ–¥—Ä—è–¥, –±—ç–∫–∞–ø —É–∂–µ –∑–∞–Ω—è—Ç.
#–Ω—É–∂–Ω–æ –∏—Ö –Ω—É–º–µ—Ä–æ–≤–∞—Ç—å

#—Å–¥–µ–ª–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –¥–ª—è —Å–±—Ä–æ—Å–∞ –ª–æ–≥–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
#—Å–¥–µ–ª–∞—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏ —Å–æ–æ–±—â–µ–Ω–∏–π (—Å–º. SQL.type.test)
#–ø–æ—Å—Ç–∞–≤–∏—Ç—å —Å–µ–±–µ –ª–∏–Ω–∏—é –Ω–∞ 80-—Ç–æ–º —Å—Ç–æ–ª–±—Ü–µ –≤ VSC, —á—Ç–æ–± –Ω–µ —Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞–∂–¥—ã–π —Ä–∞–∑ –Ω–∞ –Ω–æ–º–µ—Ä –∫–æ–ª–æ–Ω–∫–∏
#datetime in active_cards (time instead of char_var). –ù–£–ñ–ù–û –î–õ–Ø –°–û–†–¢–ò–†–û–í–ö–ò
#–ü–û–ö–ê-–ß–¢–û –í –Æ–ó–ï–†_–ù–ï–ô–ú –°–¢–û–õ–ë–ï–¶ –°–õ–û–í–ê–†–ï–ô –ë–£–î–ï–ú –ü–ò–°–ê–¢–¨ –ò–ù–ö–†–ï–ú–ï–ù–¢ (–¶–ò–§–ï–†–ö–£ –í –§–û–†–ú–ê–¢–ï –°–¢–†–û–ö–ò)
#—Å–¥–µ–ª–∞—Ç—å –º–æ—â–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ !bookish.py
'''–ø–µ—Ä–µ–¥–µ–ª–∞—Ç—å –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã None –∏–º–µ–Ω–Ω–æ –≤ NoneType, –∞ –Ω–µ str. –í –±–¥ —ç—Ç–æ –±—É–¥–µ—Ç null. 
    –¢–æ–ª—å–∫–æ –Ω–∞–¥–æ –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã –≤–º–µ—Å—Ç–µ —Å %s'''
#–ø—Ä–æ–≤–µ—Ä–∫—É if len == 1 –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–∞—Ö SELECT .. WHERE –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —á—Ç–æ-—Ç–æ –±–æ–ª–µ–µ –æ—Å–º—ã—Å–ª–µ–Ω–Ω–æ–µ
#–¥–æ–±–∞–≤–∏—Ç—å –≤–æ –≤—Å–µ Dict.tables –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫—É–¥–∞-—Ç–æ –Ω–∞ –≤–∏–¥–Ω–æ–µ –º–µ—Å—Ç–æ (–∫–æ–º–º–µ–Ω—Ç –Ω–∞–ø—Ä–∏–º–µ—Ä)
#–ü–û–ß–ò–¢–ê–¢–¨ –ü–ï–ü (–Ω–∞–ø—Ä–∏–º–µ—Ä –ø—Ä–æ —Ç–æ, –∫–∞–∫ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å –¥–ª–∏–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏)
#–ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ –ú–£–ü–£–µ–º
#–Ω–∞–ø–∏—Å–∞—Ç—å FIND()
#help message customisation (embed, send in DM not in server)
#–ø—Ä–æ—á–∏—Ç–∞—Ç—å –ø—Ä–æ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã https://habr.com/ru/post/141411/
#RENEGATTO COMPRENDO CHITAT' DMs
#–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–æ–º–º–∞–Ω–¥ (–∏ –∏–≤–µ–Ω—Ç–æ–≤ - listenerov?) (extentions & cogs)
#events —Ç–æ–∂–µ —Ä–∞—Å–∫–∏–¥–∞—Ç—å –ø–æ —Ñ–∞–π–ª–∞–º (–ª–æ–≥–∏—á–Ω–æ, –µ—Å–ª–∏ —Ä–µ–∞–∫—Ü–∏–∏ –¥–ª—è bookish –±—É–¥—É—Ç –≤ bookish)
#–ø—Ä–æ—Å–ª–µ–¥–∏—Ç—å, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç R –ø–æ—Å–ª–µ —Ä–∞–∑–±–∏–µ–Ω–∏—è –Ω–∞ @commands
#done with 0.1.3 --- next ver: bot 0.2.0 (sql database). Then 0.2.1 (pics sending)

#–†–µ—Ñ–ê–∫–¢–æ–†–∏—Ç–¨ (–Ω–∞—á–∏–Ω–∞—è —Å –±–∏–ª—Ç-–∏–Ω –º–µ—Ç–æ–¥–æ–≤ –∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞—è –Ω–æ–≤—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏, —Ç–∏–ø–∞–º–∏, [—Å—É–±]–∫–ª–∞—Å—Å–∞–º–∏)
#–ø—Ä–æ–¥—É–º–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –±—ç–∫–∞–ø–æ–≤ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å + —Ä—É—á–Ω–æ–π —É—Ä–æ–≤–µ–Ω—å)
#–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É (—á–∏–∞—Ç–π FAQ –ø–æ—á–∞—â–µ)
'''—Å–¥–µ–ª–∞—Ç—å –∑–∞—â–∏—Ç—É –æ—Ç —Å–ø–∞–º–∞ (–º–∞–∫—Å–∏–º—É–º - 120 –¥–µ–π—Å—Ç–≤–∏–π –∑–∞ –º–∏–Ω—É—Ç—É, —Ç. –µ. 6 —á–µ–ª - –¥–µ–π—Å—Ç–≤–∏–µ 3 —Å–µ–∫—É–Ω–¥—ã, 
24 —á–µ–ª - –¥–µ–π—Å—Ç–≤–∏–µ –≤ 12 —Å–µ–∫(!). –î–ª—è –Ω–∞—á–∞–ª–∞ —Å–ª–æ—É–º–æ–¥ = 1 —Å–µ–∫ –ø–æ–π–¥–µ—Ç. –ù—É–∂–µ–Ω –µ—â–µ –∏ —è–≤–Ω—ã–π —Å—á–µ—Ç—á–∏–∫ –∏–≤–µ–Ω—Ç–æ–≤ –Ω–∞ —Å–ª—É—á–∞–π, 
–µ—Å–ª–∏ –æ–Ω–∏ –≤–º–µ—Å—Ç–µ —Ä–µ—à–∞—Ç –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å—Ç—Ä–µ—Å—Å-—Ç–µ—Å—Ç –∏ (–±—É–¥—É—Ç –∫–ª–∏–∫–∞—Ç—å –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É) '''


GUILD = 673968890325237771 #server name (–ü–ö)

bot_prefix = '!v ' #–ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–ª–∏ –ø—Ä–µ—Ñ–∏–∫—Å
bot = commands.Bot(command_prefix = bot_prefix)

@bot.event
async def on_ready(): #executes when connection made and data prepaired
    for guild in bot.guilds:
        if guild.id == GUILD:
            break
    print(f'{bot.user} is connected to  {guild.name} (id: {guild.id})')
    for member in guild.members: #finding my "member"
        if member.name == "Machine ü™ê":
            my_member = member
    if ua.is_user_allowed(my_member.name, my_member.id): #am I even allowed lol (just in case)
        await my_member.create_dm()
        await my_member.dm_channel.send("```—Å–∫–æ—Ä–æ –º–∞–º–∞ –ø–æ–∑–æ–≤–µ—Ç```")
        print('start_dm_sent')
    else:
        print('that user is not allowed. Start dm was not send')
    —Å–º–æ—Ç—Ä–∏—Ç = discord.ActivityType.watching #cyrillics test succ
    await bot.change_presence(activity = discord.Activity(type = —Å–º–æ—Ç—Ä–∏—Ç, name = '!v help'))

@bot.event  #—Å—Ç–µ–Ω–æ–≥—Ä–∞–º–º–∞
async def on_message(message): #saving of all dialogues
    log_message(message)
    await bot.process_commands(message) #—ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É –¥—Ä—É–≥–∏—Ö –∫–æ–º–º–∞–Ω–¥ (—Å–º–æ—Ç—Ä–∏ FAQ –ø–æ—á–∞—â–µ)

@bot.check #global permission check
def user_permission_check(ctx): #applying permitted users list
    #print(f'author.name equals {name}') #–ø–æ—á–µ–º—É —ç—Ç–æ—Ç –ø—Ä–∏–Ω—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –º–Ω–æ–≥–æ —Ä–∞–∑ –ø–æ—Å–ª–µ !vhelp?
    return ua.is_user_allowed(ctx.author.name, ctx.author.id) #–≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–ª–∞–≥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏

def is_me():#decorator for is_me check
    def is_me_check(ctx):
        return ctx.message.author.id == 303115719644807168 #my_id
    return commands.check(is_me_check)

if discord_error_handling:
    @bot.event  #–ø—Ä–∏ –æ—Ç–ª–∞–¥–∫–µ –æ—Ç–∫–ª—é—á–∞–µ–º —ç—Ç–æ, —á—Ç–æ–±—ã –≤—Å–µ –æ—à–∏–±–∫–∏ —à–ª–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –∞ –Ω–µ —Ç–µ—Ä—è–ª–∏—Å—å 
    async def on_command_error(ctx, error):
        pass # –µ—Å–ª–∏ —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞, –µ–∫—Å–µ–ø—à–æ–Ω—ã –Ω–µ –ø—Ä–∏–Ω—Ç—è—Ç—Å—è. –≤–æ –∫–∞–∫
        if isinstance(error, commands.errors.CheckFailure): #–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
            await ctx.send("```You don't have permission to use it```")
        if isinstance(error, commands.errors.CommandNotFound):  #–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É "–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞"
            cool_responses = ["Try something different", "you've entered wrong command",
                        "**English, mother#$^%*1!! Can you speak it?**","There is no that command",
                        "Wrong command", "This command haven't been added yet, unfortunately"]
            #await ctx.send(random.choice(cool_responses))
            await ctx.send(f'`{random.choice(cool_responses)}`')
        if isinstance(error, commands.UserInputError):
            await ctx.send('```UserInputError occured```')# base class for several next errors
        if isinstance(error, commands.MissingRequiredArgument):
            await ctx.send('```Not enough arguments for that command```')
        if isinstance(error, commands.TooManyArguments):
            await ctx.send("```You've entered too many arguments```")
        if isinstance(error, commands.BadArgument):
            await ctx.send('```Wrong argument```')
        if isinstance(error, commands.BadUnionArgument):
            await ctx.send('```Wrong union argument```')
        if isinstance(error, commands.ArgumentParsingError):
            await ctx.send('```ArgumentParsingError occured```')
        if isinstance(error, commands.ExtensionFailed): #NE ROBIT —Å–º. "update" command
            await ctx.send('```ExtensionFailed```')

@bot.event #–¥–µ–ª–∞–µ–º —ç–º–±–µ–¥
async def on_reaction_add(reaction, user): #leads to card flip on 'translation' side 
    msg_id = reaction.message.id
    if user == bot.user: return #–µ—Å–ª–∏ –±–æ—Ç –Ω–µ —Å–∞–º –ø–æ—Å—Ç–∞–≤–∏–ª —ç—Ç—É —Ä–µ–∞–∫—Ü–∏—é
    if reaction.emoji != 'üîÅ': return #–µ—Å–ª–∏ —ç–º–æ–¥–∑–∏ –∏–º–µ–Ω–Ω–æ —ç—Ç–æ
    R = rc.fetch_active_card(msg_id) #–∏—â–µ–º —ç—Ç–æ —Å–æ–æ–±—â –≤ –ë–î —Å–æ–æ–±—â–µ–Ω–∏–π-–∫–∞—Ä—Ç–æ—á–µ–∫
    if R == None: return #–∑–Ω–∞—á–∏—Ç –æ–Ω –ø—É—Å—Ç–æ–π –∏ –∫–∞—Ä—Ç–æ—á–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
    await reaction.message.edit(embed = R.dm_embed_card('translation'))

@bot.event 
async def on_reaction_remove(reaction, user): #flips card_message on 'word' side again
    msg_id = reaction.message.id
    if user == bot.user: return
    if reaction.emoji != 'üîÅ': return
    R = rc.fetch_active_card(msg_id)
    if R == None: return #–∑–Ω–∞—á–∏—Ç –æ–Ω –ø—É—Å—Ç–æ–π –∏ –∫–∞—Ä—Ç–æ—á–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
    await reaction.message.edit(embed = R.dm_embed_card('word'))


#------------------–≥—Ä—É–ø–ø–∞ –∏–≤–µ–Ω—Ç–æ–≤ –¥–ª—è –∫–Ω–∏–∂–Ω–æ–≥–æ---------------------
 
def is_bookish_message(message): #func for sprcific guild check. id is for –ü–ö server
    if isinstance(message.channel, discord.TextChannel): 
        return message.guild.id == 673968890325237771
    else:
        return False

def is_bookish_member(member): return member.guild.id == 673968890325237771

@bot.event
async def on_member_join(member):
    if is_bookish_member(member):
        log_channel = get_log_channel(member.guild)#–∏–ª–∏ (member.guild, 'general_logs')
        if log_channel: #–µ—Å–ª–∏ –æ–Ω –∑–∞–¥–∞–Ω
            print(log_channel)
            await log_channel.send('on_member_join worked')

@bot.event
async def on_member_remove(member):
    if is_bookish_member(member):
        log_channel = get_log_channel(member.guild)
        if log_channel: #–µ—Å–ª–∏ –æ–Ω –∑–∞–¥–∞–Ω
            print(log_channel)
            await log_channel.send('on_member_remove worked')

@bot.event
async def on_message_edit(before, after):
    if is_bookish_message(before) and not before.author.bot:
    #–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –µ–º–±–µ–¥–∞ == edit. —Ç–∞–∫ —á—Ç–æ –Ω—É–∂–Ω–∞ —Ç–∞–±–ª–µ—Ç–∫–∞ –æ—Ç —Å–∞–º–æ–æ—Ç–≤–µ—Ç–æ–≤
        log_channel = get_log_channel(before.guild)
        if log_channel: #–µ—Å–ª–∏ –æ–Ω –∑–∞–¥–∞–Ω
            embed = discord.Embed(title = '__**message edited**__', type = 'rich', 
                            description = f'`author:` {before.author}\n`msg`: {before.content}\n`edited:` {after.content}', 
                            colour = discord.Colour.dark_teal())
            await log_channel.send(embed = embed)

@bot.event
async def on_message_delete(message):
    if is_bookish_message(message) and message.author != bot.user:
    #—Ç—É—Ç —Ç–∞–±–ª–µ—Ç–∫–∞ —Ä–∞–¥–∏ —É–¥–æ–±—Å—Ç–≤–∞. –ê —Ç–æ —Å–±—â –æ—Ç –±–æ—Ç–∞ –±—ã–ª–∏ –Ω–µ—É–¥–∞–ª—è–µ–º—ã–º–∏
        log_channel = get_log_channel(message.guild)
        if log_channel: #–µ—Å–ª–∏ –æ–Ω –∑–∞–¥–∞–Ω
            embed = discord.Embed(title = '__**message deleted**__', type = 'rich', 
                            description = f'`author:` {message.author}\n`msg`: {message.content}',
                            colour = discord.Colour.gold())
            await log_channel.send(embed = embed)

def str_to_status(argument):
    if (argument in ('dnd','do_not_disturb', 'otsosi')):
        status = discord.Status.dnd
    elif (argument in ('idle','sleep', '–Ω–µ –∞–∫—Ç–∏–≤–µ–Ω', '–∞—Ñ–∫')):
        status = discord.Status.idle
    else: status = discord.Status.online
    return status

#-----------------------------------COMMANDS-------------------------------

@bot.command(name = '_custom', help = 'staff only') #–º–æ–∂–Ω–æ —Å—é–¥–∞ –ø–∏—Ö–∞—Ç—å –ª—é–±—É—é –≤—Ä–µ–º–µ–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É
@is_me()
async def getdirs(ctx): #–ø–æ—Å–º–æ—Ç—Ä–∏–º —Ñ–∞–π–ª—ã –≤ –æ–±–ª–∞–∫–µ
    with open('pull_listdir.txt', 'wb') as F:
        for element in os.listdir():
            F.write((element + '\n').encode('utf-8'))
    file = discord.File('pull_listdir.txt')
    #await ctx.author.create_dm()
    await ctx.author.dm_channel.send('`Here is your dictionary file`', file = file)
    await ctx.author.dm_channel.send('`create_dm needed only once`')
'''dict_file = discord.File(
            f'_Dictionaries/of {cursedtea}.txt', filename = 'Tea card collection.txt')
    await ctx.author.create_dm()
    await ctx.author.dm_channel.send('`Here is your dictionary file`', file = dict_file)
    
    dict_file = discord.File(
            f'_Dictionaries/of {cursedtea}.txt', filename = 'Tea card collection.txt')
    await ctx.author.create_dm()
    await ctx.author.dm_channel.send('`Here is your dictionary file`', file = dict_file)'''

@commands.command(name = '_msg', help = 'staff only') #custom message. 
#to channels or users on the sever where command is invoked
@is_me()
async def custom_message(ctx, id_type: str, opt_id: int, *args): #—Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –∏–Ω—Ç –¥–ª—è –ø–∏—Ç–æ–Ω–∞?
    #–†–ê–ë–û–¢–ê–ï–¢ –ß–ï–†–ï–ó –†–ê–ó
    print(id_type, opt_id, args)
    message = ' '.join(args)
    if id_type == 'ch':
        await ctx.guild.get_channel(opt_id).send(message)
    elif id_type == 'dm':
        member = ctx.guild.get_member(opt_id)
        await member.create_dm()
        await member.dm_channel.send(message)
    else:
        await ctx.send('`Wrong id_type argument`')

@bot.command(name = '_init', 
    help = '[name] [id] for user initialization')
@is_me()
#–Ω–∞ —Ç–µ—Å—Ç–µ (–ø–æ–∫–∞ –±–æ—Ç –ø—Ä–∏–≤–∞—Ç–Ω—ã–π) —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–∞–≤–∞—Ç—å –≤—Ä—É—á–Ω—É—é
#–ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –±–æ—Ç —Å—Ç–∞–Ω–µ—Ç –ø—É–±–ª–∏—á–Ω—ã–º, –æ–±—Å–ª—É–∂–∏–≤–∞—Ç—å —é–∑–µ—Ä–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–æ–≤-–ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
async def admit_user(ctx, name: str, snowflake_id: str):
    info = ua.init_user(name, snowflake_id)
    await ctx.send(f'`{info}`')

@bot.command(name = '_block', help = '[id] [name: Optional]' + 
    'for blocking user with this id. Or just to log new user without admission')
@is_me() 
async def block_user(ctx, snowflake_id: str, name: str = None):
    info = ua.block_user(name, snowflake_id)
    await ctx.send(f'`{info}`')

@bot.command(name = '_status', help = 'staff only') #status update
@is_me() #–≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —à—Ç–∞—Ç–Ω–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç CheckFailure
async def status_setup(ctx, status_input: str_to_status, *args):
    game = discord.Game(' '.join(args))
    await ctx.bot.change_presence(status = status_input, activity = game)

@bot.command(name = '_update', help = 'staff only')
@is_me()
async def update_commands(ctx): #for updating commands during runtime
    try:
        ctx.bot.reload_extension('!bookish')
        ctx.bot.reload_extension('!pics')
        ctx.bot.reload_extension('!cards')
    except commands.ExtensionFailed: 
        await ctx.send('```Some error in command-extentions being reloaded```')
        return
    try: 
        reload(rc) #update _repeat_class module
        reload(le) #update _language_edits module
        reload(ua) #update _users_admission module
        reload(db) #update _database module
        reload(rc) #update _readalong_class module
        #reload(fetch_active_card) #–∫–∞–∫ –±—ã –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –∏–º–ø–æ—Ä—Ç–∞ –∞ –Ω–µ –º–æ–¥—É–ª–∏..
        #!cards.cards_import_reload() #–µ—â–µ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã —Ç–∞–∫ –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ—Å–≤–µ–Ω–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã 
        #–≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞–∫ –∑–∞–ø—Ä–µ—â–∞–µ—Ç import !cards 
    except Exception:
        await ctx.send('```Some error in modules being reloaded```')
        return
    await ctx.send('```Extensions have been updated successfully```')

#--------------------------LIST OF FUNCTIONS---------------------------- 

def log_message(message): #–≤—ã–Ω–µ—Å–ª–∏ —Å—é–¥–∞ —Ñ—É–Ω–∫—Ü–∏—é –≤–µ–¥–µ–Ω–∏—è —Å—Ç–µ–Ω–æ–≥—Ä–∞–º–º—ã —Ü–µ–ª–∏–∫–æ–º
    time = message.created_at 
    author = message.author
    #print(f'--- message from {author} --- ')
    print(f'--- message from {author} --- in {message.channel}\n{message.content}\n')
    if type(message.channel) == discord.channel.DMChannel:
        name = message.channel.recipient.name #–∏–º—è —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ DM-–∫–∞–Ω–∞–ª–∞
        with open(fR'_DMs_history\of {name}.txt', 'ab') as F:
            if author == bot.user:
                F.write(f'{bot.user.name} - {time}\n{message.content}\n\n'.encode('utf-8'))
            else: #–ø—Ä–æ–±–ª–µ–º—ã —Å –±–∏—Ç–æ–π –∫–∏—Ä–∏–ª–ª–∏—Ü–µ–π —Ä–∞–∑—Ä–µ—à–∏–ª–∏—Å—å –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç–∞—Ä–æ–≥–æ —Ñ–∞–π–ª–∞
                F.write(f'{author.name} - {time}\n{message.content}\n\n'.encode('utf-8'))
    r'''if type(message.channel) == discord.channel.TextChannel: 
    #–Ω–µ –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª –≤ –æ–±–ª–∞–∫–µ
    #–ø–æ—ç—Ç–æ–º—É –∫—Ç—Ç—Å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –ª–æ–≥–∏ –Ω–∞ —Ç–∞–±–ª–∏—á–∫–∏
        guild = message.guild
        dirs = os.listdir('_Server_msg_hisory')
        if (f'of {guild}' in dirs) == False:
            os.mkdir(Rf'_Server_msg_hisory\of {guild}')
        with open(fR'_Server_msg_hisory\of {guild}\{message.channel}.txt', 'ab') as F:
            if author == bot.user:
                F.write(f'{author.name} - {time}\n{message.content}\n\n'.encode('utf-8'))
            else:
                F.write(f'{author.name} - {time}\n{message.content}\n\n'.encode('utf-8'))'''
    #–µ—â–µ –µ—Å—Ç—å —Ç–∏–ø—ã –∫–∞–Ω–∞–ª–æ–≤ –∫—Ä–æ–º–µ DMChannel –∏ TextChannel?

def get_log_channel(guild: discord.guild, logs_type: str = 'all') -> discord.TextChannel:
    if logs_type == 'all':
        lines = db.cursor_exec_select("SELECT * FROM log_channels WHERE "
            + f"server_id = '{guild.id}' AND logs_type = 'all'")
    if len(lines) == 1:
        channel_id = int(lines[0][2])
    elif len(lines) == 0: 
        print("log channel hasn't been chosen")
        return None #–∫–∞–Ω–∞–ª –Ω–µ –∑–∞–¥–∞–Ω
    elif len(lines) > 1: 
        print('–ú–Ø–£! –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –¥—É–±–ª–∏–∫–∞—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö')
        return None #–æ—à–∏–±–∫–∞ 
    #elif purpose == <purpose_name> ... id –≤–æ–∑–≤—Ä–∞—Ç–∏—Ç—å –ø–æ –∫–ª—é—á—É (—Å–µ—Ä–≤–µ—Ä id + logs_type) 
    #(–Ω–∞–ø—Ä: important_audit_logs, deletion_logs, welcome_bye_logs)
    return guild.get_channel(channel_id)

def create_folders():
    dirs = os.listdir()
    if ('_DMs_history' in dirs) == False:
        os.mkdir('_DMs_history')
    if ('_Server_msg_hisory' in dirs) == False:
        os.mkdir('_Server_msg_hisory')

#------------------------–í–û–¢ PARAMETERS AND START UP----------------------------

bot.load_extension('!cards') #–ø–æ–¥–∫–ª—é—á–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
bot.load_extension('!bookish')
bot.load_extension('!pics') 
create_folders() #—Å–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –¥–ª—è –ª–æ–≥–æ–≤, –µ—Å–ª–∏ –∏—Ö –Ω–µ –±—ã–ª–æ

bot.run(TOKEN)